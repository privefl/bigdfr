% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\docType{methods}
\name{filter.FDF}
\alias{filter.FDF}
\alias{filter_int}
\alias{filter}
\alias{filter,FDF-method}
\title{Return rows with matching conditions}
\usage{
\method{filter}{FDF}(.data, ...)

filter_int(.data, subset, check = TRUE)

filter(.data, ...)

\S4method{filter}{FDF}(.data, ...)
}
\arguments{
\item{.data}{A \link[=FDF-class]{FDF}.}

\item{...}{Logical predicates defined in terms of the variables in \code{.data}.
Multiple conditions are combined with \code{&}. Only rows where the
condition evaluates to \code{TRUE} are kept.

These arguments are automatically \link[rlang:quo]{quoted} and
\link[rlang:eval_tidy]{evaluated} in the context of the data
frame. They support \link[rlang:quasiquotation]{unquoting} and
splicing. See \code{vignette("programming")} for an introduction to
these concepts.}

\item{subset}{Integer vector to (further) subset \code{.data$ind_row}.}

\item{check}{Whether to check \code{subset}? Default is \code{TRUE}.}
}
\value{
An object of the same class as \code{.data}.
}
\description{
Use \code{filter()} find rows/cases where conditions are true. Unlike
base subsetting with \code{[}, rows where the condition evaluates to \code{NA} are
dropped.
}
\examples{
(test <- FDF(datasets::iris))
filter(test, Species == "setosa")
filter(test, Species == "setosa", Sepal.Length < 5)
filter_int(test, 1:50)
}
