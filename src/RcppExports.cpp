// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// extract_dbl
SEXP extract_dbl(Environment X, size_t j);
RcppExport SEXP _bigdfr_extract_dbl(SEXP XSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_dbl(X, j));
    return rcpp_result_gen;
END_RCPP
}
// extract_int
SEXP extract_int(Environment X, size_t j);
RcppExport SEXP _bigdfr_extract_int(SEXP XSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_int(X, j));
    return rcpp_result_gen;
END_RCPP
}
// extract_lgl
SEXP extract_lgl(Environment X, size_t j);
RcppExport SEXP _bigdfr_extract_lgl(SEXP XSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_lgl(X, j));
    return rcpp_result_gen;
END_RCPP
}
// extract_ushort
SEXP extract_ushort(Environment X, size_t j);
RcppExport SEXP _bigdfr_extract_ushort(SEXP XSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_ushort(X, j));
    return rcpp_result_gen;
END_RCPP
}
// extract_string
CharacterVector extract_string(Environment X, size_t j, CharacterVector strings);
RcppExport SEXP _bigdfr_extract_string(SEXP XSEXP, SEXP jSEXP, SEXP stringsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type strings(stringsSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_string(X, j, strings));
    return rcpp_result_gen;
END_RCPP
}
// fill_dbl
void fill_dbl(Environment X, size_t j, SEXP vec);
RcppExport SEXP _bigdfr_fill_dbl(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type vec(vecSEXP);
    fill_dbl(X, j, vec);
    return R_NilValue;
END_RCPP
}
// fill_int
void fill_int(Environment X, size_t j, SEXP vec);
RcppExport SEXP _bigdfr_fill_int(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type vec(vecSEXP);
    fill_int(X, j, vec);
    return R_NilValue;
END_RCPP
}
// fill_lgl
void fill_lgl(Environment X, size_t j, SEXP vec);
RcppExport SEXP _bigdfr_fill_lgl(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type vec(vecSEXP);
    fill_lgl(X, j, vec);
    return R_NilValue;
END_RCPP
}
// fill_ushort
void fill_ushort(Environment X, size_t j, SEXP vec);
RcppExport SEXP _bigdfr_fill_ushort(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type vec(vecSEXP);
    fill_ushort(X, j, vec);
    return R_NilValue;
END_RCPP
}
// getXPtrFDF
SEXP getXPtrFDF(std::string path, size_t n_all, IntegerVector types);
RcppExport SEXP _bigdfr_getXPtrFDF(SEXP pathSEXP, SEXP n_allSEXP, SEXP typesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< size_t >::type n_all(n_allSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type types(typesSEXP);
    rcpp_result_gen = Rcpp::wrap(getXPtrFDF(path, n_all, types));
    return rcpp_result_gen;
END_RCPP
}
// add_bytes
void add_bytes(std::string fileName, std::size_t nbyte);
RcppExport SEXP _bigdfr_add_bytes(SEXP fileNameSEXP, SEXP nbyteSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fileName(fileNameSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type nbyte(nbyteSEXP);
    add_bytes(fileName, nbyte);
    return R_NilValue;
END_RCPP
}
// NA_replace
SEXP NA_replace(SEXP x, SEXP by);
RcppExport SEXP _bigdfr_NA_replace(SEXP xSEXP, SEXP bySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by(bySEXP);
    rcpp_result_gen = Rcpp::wrap(NA_replace(x, by));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bigdfr_extract_dbl", (DL_FUNC) &_bigdfr_extract_dbl, 2},
    {"_bigdfr_extract_int", (DL_FUNC) &_bigdfr_extract_int, 2},
    {"_bigdfr_extract_lgl", (DL_FUNC) &_bigdfr_extract_lgl, 2},
    {"_bigdfr_extract_ushort", (DL_FUNC) &_bigdfr_extract_ushort, 2},
    {"_bigdfr_extract_string", (DL_FUNC) &_bigdfr_extract_string, 3},
    {"_bigdfr_fill_dbl", (DL_FUNC) &_bigdfr_fill_dbl, 3},
    {"_bigdfr_fill_int", (DL_FUNC) &_bigdfr_fill_int, 3},
    {"_bigdfr_fill_lgl", (DL_FUNC) &_bigdfr_fill_lgl, 3},
    {"_bigdfr_fill_ushort", (DL_FUNC) &_bigdfr_fill_ushort, 3},
    {"_bigdfr_getXPtrFDF", (DL_FUNC) &_bigdfr_getXPtrFDF, 3},
    {"_bigdfr_add_bytes", (DL_FUNC) &_bigdfr_add_bytes, 2},
    {"_bigdfr_NA_replace", (DL_FUNC) &_bigdfr_NA_replace, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bigdfr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
