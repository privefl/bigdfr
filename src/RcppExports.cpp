// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// extract_dbl
SEXP extract_dbl(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row);
RcppExport SEXP _bigdfr_extract_dbl(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_dbl(xptr, j, list_ind_row));
    return rcpp_result_gen;
END_RCPP
}
// extract_int
SEXP extract_int(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row);
RcppExport SEXP _bigdfr_extract_int(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_int(xptr, j, list_ind_row));
    return rcpp_result_gen;
END_RCPP
}
// extract_lgl
SEXP extract_lgl(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row);
RcppExport SEXP _bigdfr_extract_lgl(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_lgl(xptr, j, list_ind_row));
    return rcpp_result_gen;
END_RCPP
}
// extract_ushort
SEXP extract_ushort(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row);
RcppExport SEXP _bigdfr_extract_ushort(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_ushort(xptr, j, list_ind_row));
    return rcpp_result_gen;
END_RCPP
}
// extract_string
List extract_string(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row, CharacterVector strings);
RcppExport SEXP _bigdfr_extract_string(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP, SEXP stringsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type strings(stringsSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_string(xptr, j, list_ind_row, strings));
    return rcpp_result_gen;
END_RCPP
}
// extract_fct
List extract_fct(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row, IntegerVector ints);
RcppExport SEXP _bigdfr_extract_fct(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP, SEXP intsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ints(intsSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_fct(xptr, j, list_ind_row, ints));
    return rcpp_result_gen;
END_RCPP
}
// fill_dbl
void fill_dbl(Environment X, size_t j, SEXP vec);
RcppExport SEXP _bigdfr_fill_dbl(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type vec(vecSEXP);
    fill_dbl(X, j, vec);
    return R_NilValue;
END_RCPP
}
// fill_int
void fill_int(Environment X, size_t j, SEXP vec);
RcppExport SEXP _bigdfr_fill_int(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type vec(vecSEXP);
    fill_int(X, j, vec);
    return R_NilValue;
END_RCPP
}
// fill_lgl
void fill_lgl(Environment X, size_t j, SEXP vec);
RcppExport SEXP _bigdfr_fill_lgl(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type vec(vecSEXP);
    fill_lgl(X, j, vec);
    return R_NilValue;
END_RCPP
}
// fill_chr
void fill_chr(Environment X, size_t j, IntegerVector vec);
RcppExport SEXP _bigdfr_fill_chr(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vec(vecSEXP);
    fill_chr(X, j, vec);
    return R_NilValue;
END_RCPP
}
// fill_fct
void fill_fct(Environment X, size_t j, IntegerVector vec, IntegerVector match);
RcppExport SEXP _bigdfr_fill_fct(SEXP XSEXP, SEXP jSEXP, SEXP vecSEXP, SEXP matchSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type X(XSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type match(matchSEXP);
    fill_fct(X, j, vec, match);
    return R_NilValue;
END_RCPP
}
// getXPtrFDF
SEXP getXPtrFDF(std::string path, size_t n_all, IntegerVector types);
RcppExport SEXP _bigdfr_getXPtrFDF(SEXP pathSEXP, SEXP n_allSEXP, SEXP typesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< size_t >::type n_all(n_allSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type types(typesSEXP);
    rcpp_result_gen = Rcpp::wrap(getXPtrFDF(path, n_all, types));
    return rcpp_result_gen;
END_RCPP
}
// add_bytes
void add_bytes(std::string fileName, std::size_t nbyte);
RcppExport SEXP _bigdfr_add_bytes(SEXP fileNameSEXP, SEXP nbyteSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fileName(fileNameSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type nbyte(nbyteSEXP);
    add_bytes(fileName, nbyte);
    return R_NilValue;
END_RCPP
}
// split_dbl
List split_dbl(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row);
RcppExport SEXP _bigdfr_split_dbl(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    rcpp_result_gen = Rcpp::wrap(split_dbl(xptr, j, list_ind_row));
    return rcpp_result_gen;
END_RCPP
}
// split_int
List split_int(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row);
RcppExport SEXP _bigdfr_split_int(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    rcpp_result_gen = Rcpp::wrap(split_int(xptr, j, list_ind_row));
    return rcpp_result_gen;
END_RCPP
}
// split_ushort
List split_ushort(SEXP xptr, size_t j, ListOf<IntegerVector> list_ind_row, IntegerVector ints, int nk);
RcppExport SEXP _bigdfr_split_ushort(SEXP xptrSEXP, SEXP jSEXP, SEXP list_ind_rowSEXP, SEXP intsSEXP, SEXP nkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< size_t >::type j(jSEXP);
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type list_ind_row(list_ind_rowSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ints(intsSEXP);
    Rcpp::traits::input_parameter< int >::type nk(nkSEXP);
    rcpp_result_gen = Rcpp::wrap(split_ushort(xptr, j, list_ind_row, ints, nk));
    return rcpp_result_gen;
END_RCPP
}
// match_int
IntegerVector match_int(IntegerVector x, IntegerVector table);
RcppExport SEXP _bigdfr_match_int(SEXP xSEXP, SEXP tableSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type table(tableSEXP);
    rcpp_result_gen = Rcpp::wrap(match_int(x, table));
    return rcpp_result_gen;
END_RCPP
}
// unique_chr
CharacterVector unique_chr(CharacterVector x);
RcppExport SEXP _bigdfr_unique_chr(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(unique_chr(x));
    return rcpp_result_gen;
END_RCPP
}
// match_chr
IntegerVector match_chr(CharacterVector x, CharacterVector uniq);
RcppExport SEXP _bigdfr_match_chr(SEXP xSEXP, SEXP uniqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type uniq(uniqSEXP);
    rcpp_result_gen = Rcpp::wrap(match_chr(x, uniq));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bigdfr_extract_dbl", (DL_FUNC) &_bigdfr_extract_dbl, 3},
    {"_bigdfr_extract_int", (DL_FUNC) &_bigdfr_extract_int, 3},
    {"_bigdfr_extract_lgl", (DL_FUNC) &_bigdfr_extract_lgl, 3},
    {"_bigdfr_extract_ushort", (DL_FUNC) &_bigdfr_extract_ushort, 3},
    {"_bigdfr_extract_string", (DL_FUNC) &_bigdfr_extract_string, 4},
    {"_bigdfr_extract_fct", (DL_FUNC) &_bigdfr_extract_fct, 4},
    {"_bigdfr_fill_dbl", (DL_FUNC) &_bigdfr_fill_dbl, 3},
    {"_bigdfr_fill_int", (DL_FUNC) &_bigdfr_fill_int, 3},
    {"_bigdfr_fill_lgl", (DL_FUNC) &_bigdfr_fill_lgl, 3},
    {"_bigdfr_fill_chr", (DL_FUNC) &_bigdfr_fill_chr, 3},
    {"_bigdfr_fill_fct", (DL_FUNC) &_bigdfr_fill_fct, 4},
    {"_bigdfr_getXPtrFDF", (DL_FUNC) &_bigdfr_getXPtrFDF, 3},
    {"_bigdfr_add_bytes", (DL_FUNC) &_bigdfr_add_bytes, 2},
    {"_bigdfr_split_dbl", (DL_FUNC) &_bigdfr_split_dbl, 3},
    {"_bigdfr_split_int", (DL_FUNC) &_bigdfr_split_int, 3},
    {"_bigdfr_split_ushort", (DL_FUNC) &_bigdfr_split_ushort, 5},
    {"_bigdfr_match_int", (DL_FUNC) &_bigdfr_match_int, 2},
    {"_bigdfr_unique_chr", (DL_FUNC) &_bigdfr_unique_chr, 1},
    {"_bigdfr_match_chr", (DL_FUNC) &_bigdfr_match_chr, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bigdfr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
